version: '3.8'

services:
  ad_campaign_manager:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_started
    command:
      bash -c "cd src && alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8080 --reload"

  postgres_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /usr/src/app/src
    command: bash -c "celery -A settings.celery_app worker --loglevel=info"
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /usr/src/app/src
    command: bash -c "celery -A settings.celery_app beat --loglevel=info"
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_started
      ad_campaign_manager:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

